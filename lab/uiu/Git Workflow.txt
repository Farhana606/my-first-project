               Git workflow daigram
This is workflow i recommend you use when you want to contribute to projects on github.
1.Basic
The most popular workflow among git developers and the entry stage of every project the idea is simple there is one centrol 
repository. Each developer clones the repo,works locally on the code, make a commit with change and push it to the control 
repository for other developers to pull and use in their work.

2. Featare Branch 
The basic workflow is great for developing a simple website. However, once two developing start working on two separate 
Functionalies within one project,problems begine to oppear.
Lets say one of the debelopers has finished their functionality and wants to release it. Making a release at this moment 
could result in messing everything up,to say the least. Branches are independent "tracks "of developing a project.
For each new functionality,a new branch should be created,where the new feature is developed and tested.
Once the feature is ready,The branch can be merged to the master branch so it can be released to LIVE.

3.Gitflow    
 The bigger the project,the more control you need over what and when is released. You project require more 
 unit and integration test, which are now counted in hours.Usually you don't run such tests on branches where feathres
 are developed.
 This can be resolved with gitflow,inverted and described by vincent driessen in 2010.
 This workflow employs two parallel long-running branches.
 
 1.Master
 2.Develop

 "Masters" is always ready to be released in live,with everything fully tested and approved.
 "Develop" is the branch to which all feature branches are merged and all tests are perfomed.

  The git workflow that i described are just examples.The gretest feature of git is that you can adapt it to
  your need are create your very own workflow.